name: Integration Tests

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use for testing'
        required: false
        default: '3.11'
        type: string
      docker-compose-file:
        description: 'Docker Compose file to use'
        required: false
        default: 'compose/docker-compose.ci.yaml'
        type: string
    outputs:
      test-results:
        description: 'Path to test results'
        value: 'test-results/'

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Setup .env files
        run: |
          ./compose/env/setup-env.sh

      - name: Build and start services
        run: |
          docker compose -f ${{ inputs.docker-compose-file }} up -d --build

      - name: Wait for health
        run: |
          set -eux
          end=$((SECONDS+300))
          while [ $SECONDS -lt $end ]; do
            unhealthy=$(docker ps --format '{{.Names}} {{.Status}}' | grep -E '(unhealthy|Restarting)' || true)
            if [ -z "$unhealthy" ]; then
              states=$(docker ps --format '{{.Names}} {{.Status}}')
              echo "$states"
              ready=$(echo "$states" | grep -c '(healthy)')
              if [ "$ready" -ge 3 ]; then
                exit 0
              fi
            fi
            sleep 5
          done
          echo "Services did not become healthy in time" >&2
          exit 1

      - name: Run integration tests
        run: |
          pytest tests/integration/ -v --tb=short --timeout=300 --html=test-results/integration-report.html --self-contained-html

      - name: Show logs on failure
        if: failure()
        run: |
          docker compose -f ${{ inputs.docker-compose-file }} logs --no-color || true

      - name: Cleanup
        if: always()
        run: |
          docker compose -f ${{ inputs.docker-compose-file }} down -v

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: test-results/
          retention-days: 7
